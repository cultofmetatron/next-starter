{"version":3,"sources":["/Users/peterdecroos/projects/nuxt-starter/states/counter.ts"],"names":[],"mappings":";;;;;;;;;;;;;AACkG;;AACnE;;;;;;;;AAE/B,IAAkB;AACX,WACJ;AAFsB,CAAD;AAIxB,IAAc,aAAM;AAQpB,IAAqB,kBAAkC,wBAAsB;AAC7E,IAAwB,gDAAkC,iBAAE,UAAM,OAAqB;AAC/E,QAAU,SAAS,OAAM;;AACzB,WAAM,MAAI,IAAQ,SAAO,MAAI,IAAY,YAAO,UAExD;AAAG,CAJuC;AAKhC,WAAK,KAAqB;AAEpC,IAAqB,kBAAkC,wBAAsB;AAC7E,IAAwB,gDAAkC,iBAAE,UAAM,OAAqB;AAC/E,QAAU,SAAS,OAAM;;AACzB,WAAM,MAAI,IAAQ,SAAO,MAAI,IAAY,YAAO,UACxD;AAAG,CAHuC;AAIhC,WAAK,KAAqB;AAEpC,IAAoB,iBAAG;QAAc,4EAAa;QAAQ;;AAClD,WAAc,yBAAW,YAAQ,QACzC;AAEO;QACS;QACC;QAEhB","file":"4.a564ad376275c7cfaa94.hot-update.js","sourcesContent":["\nimport { createAction, createResponder, runResponders, actionI, actionDispatcherI } from './util';\nimport { Map } from 'immutable'\n\nconst initialState = Map({\n  count: 0\n});\n\nlet responders = [];\n\ninterface amountI extends actionI {\n  args: {\n    amount: Number;\n  };\n}\n\nconst incrementAction: actionDispatcherI = createAction('Counter:Increment');\nconst incrementResponder = createResponder(incrementAction, (state, action: amountI) => {\n  const { amount } = action.args;\n  return state.set('count', state.get('count') + (amount || 1));\n\n});\nresponders.push(incrementResponder);\n\nconst decrementAction: actionDispatcherI = createAction('Counter:Decrement');\nconst decrementResponder = createResponder(decrementAction, (state, action: amountI) => {\n  const { amount } = action.args;\n  return state.set('count', state.get('count') - (amount || 1));\n});\nresponders.push(decrementResponder);\n\nconst counterReducer = function(state=initialState, action) {\n  return runResponders(responders, action, state)\n}\n\nexport {\n  counterReducer,\n  incrementAction,\n  decrementAction\n}\n\n\n// WEBPACK FOOTER //\n// ./states/counter.ts"],"sourceRoot":""}